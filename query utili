
--QUERY DA INSERIRE

/*
permette di vedere quali studenti sono idonei per aver registrato un esame tramite l'id_esame
*/

SELECT u.id_utente, u.nome, u.cognome
FROM utenti u
INNER JOIN prove_sostenuta ps ON u.id_utente = ps.id_studente
INNER JOIN prove p ON ps.id_prova = p.id_prova
INNER JOIN esami e ON p.esame_appartenente = e.id_esame
WHERE p.opzionale = FALSE
AND ps.valid = TRUE
AND e.id_esame = 13
AND p.ricaduta_esame = 'media'
GROUP BY u.id_utente, u.nome, u.cognome, e.min_prove
HAVING COUNT(ps.id_prova) >= e.min_prove
AND AVG(ps.voto) >= 18;

--vedere quali studenti hanno  determinata prova valid tramite l'idprova

SELECT u.id_utente, u.nome, u.cognome
FROM utenti u
JOIN prove_sostenuta ps ON u.id_utente = ps.id_studente
WHERE ps.valid = true
  AND ps.superato = true
  AND ps.voto >= 18
  AND ps.id_prova = 'ID_DELLA_PROVA'

  -- Prove valide
SELECT e.nome, ps.id_prova, ps.data_appello, ps.superato, ps.data_scadenza, ps.voto
FROM prove_sostenuta ps
JOIN prove p on ps.id_prova = p.id_prova
JOIN esami e on p.esame_appartenente = e.id_esame
WHERE ps.id_studente = 3
ORDER BY data_appello;
AND ps.valid = true;

 --storico prove
SELECT e.nome, ps.id_prova, ps.data_appello, ps.superato, ps.data_scadenza, ps.voto, ps.valid
FROM prove_sostenuta ps
JOIN prove p on ps.id_prova = p.id_prova
JOIN esami e on p.esame_appartenente = e.id_esame
WHERE ps.id_studente = 3
ORDER BY data_appello;

--libretto
SELECT e.nome, er.data, er.voto
FROM esami_registrati er
JOIN esami e ON er.id_esame= e.id_esame
WHERE er.id_utente = 3;

-- esami by docente responsabile
SELECT id_esame, nome
FROM esami
WHERE docente_responsabile = <ID_DEL_DOCENTE>;

--tutti gli esami disponibili 
SELECT * FROM esami

-- tutte le prove che il docente ha gestito tramite id_docente
SELECT p.*
FROM prova_gestita pg
JOIN prove p ON pg.id_prova = p.id_prova
WHERE pg.id_docente = <id_docente>;
